// Code generated by protoc-gen-go. DO NOT EDIT.
// source: measurement.proto

package measurementpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Measurement struct {
	DeviceId  string               `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Temp      float32              `protobuf:"fixed32,3,opt,name=temp,proto3" json:"temp,omitempty"`
	// This field should only be set when the measurement is not uploaded
	// immediately after it is taken, e.g. if the network goes down and
	// measurements are stored locally before upload is attempted again later.
	UploadTimestamp      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=upload_timestamp,json=uploadTimestamp,proto3" json:"upload_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Measurement) Reset()         { *m = Measurement{} }
func (m *Measurement) String() string { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()    {}
func (*Measurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f502a743c760a3e, []int{0}
}

func (m *Measurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measurement.Unmarshal(m, b)
}
func (m *Measurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measurement.Marshal(b, m, deterministic)
}
func (m *Measurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measurement.Merge(m, src)
}
func (m *Measurement) XXX_Size() int {
	return xxx_messageInfo_Measurement.Size(m)
}
func (m *Measurement) XXX_DiscardUnknown() {
	xxx_messageInfo_Measurement.DiscardUnknown(m)
}

var xxx_messageInfo_Measurement proto.InternalMessageInfo

func (m *Measurement) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Measurement) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Measurement) GetTemp() float32 {
	if m != nil {
		return m.Temp
	}
	return 0
}

func (m *Measurement) GetUploadTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.UploadTimestamp
	}
	return nil
}

type GetDevicesResponse struct {
	DeviceId             []string `protobuf:"bytes,1,rep,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicesResponse) Reset()         { *m = GetDevicesResponse{} }
func (m *GetDevicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDevicesResponse) ProtoMessage()    {}
func (*GetDevicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f502a743c760a3e, []int{1}
}

func (m *GetDevicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesResponse.Unmarshal(m, b)
}
func (m *GetDevicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesResponse.Marshal(b, m, deterministic)
}
func (m *GetDevicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesResponse.Merge(m, src)
}
func (m *GetDevicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDevicesResponse.Size(m)
}
func (m *GetDevicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesResponse proto.InternalMessageInfo

func (m *GetDevicesResponse) GetDeviceId() []string {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

type GetLatestRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLatestRequest) Reset()         { *m = GetLatestRequest{} }
func (m *GetLatestRequest) String() string { return proto.CompactTextString(m) }
func (*GetLatestRequest) ProtoMessage()    {}
func (*GetLatestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f502a743c760a3e, []int{2}
}

func (m *GetLatestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLatestRequest.Unmarshal(m, b)
}
func (m *GetLatestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLatestRequest.Marshal(b, m, deterministic)
}
func (m *GetLatestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLatestRequest.Merge(m, src)
}
func (m *GetLatestRequest) XXX_Size() int {
	return xxx_messageInfo_GetLatestRequest.Size(m)
}
func (m *GetLatestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLatestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLatestRequest proto.InternalMessageInfo

func (m *GetLatestRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

var E_Regex = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50000,
	Name:          "measurement.regex",
	Tag:           "bytes,50000,opt,name=regex",
	Filename:      "measurement.proto",
}

func init() {
	proto.RegisterType((*Measurement)(nil), "measurement.Measurement")
	proto.RegisterType((*GetDevicesResponse)(nil), "measurement.GetDevicesResponse")
	proto.RegisterType((*GetLatestRequest)(nil), "measurement.GetLatestRequest")
	proto.RegisterExtension(E_Regex)
}

func init() { proto.RegisterFile("measurement.proto", fileDescriptor_5f502a743c760a3e) }

var fileDescriptor_5f502a743c760a3e = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x3b, 0x6d, 0xbf, 0x0f, 0x33, 0x45, 0x5a, 0x67, 0x21, 0x21, 0xb5, 0x34, 0x04, 0x85,
	0x80, 0x36, 0xd5, 0x68, 0x41, 0x05, 0x37, 0xc5, 0xb6, 0x08, 0x8a, 0x10, 0x5d, 0x29, 0xb5, 0xa4,
	0xcd, 0xb5, 0x04, 0x9a, 0xce, 0x98, 0x99, 0x88, 0x7f, 0xd0, 0x85, 0x0b, 0xdf, 0xc4, 0x47, 0xf0,
	0x3d, 0x7c, 0x05, 0xdf, 0x44, 0x9a, 0xd8, 0x26, 0x4d, 0x17, 0x6e, 0x42, 0xb8, 0xe7, 0x9c, 0x7b,
	0x7f, 0x77, 0x66, 0xf0, 0x8a, 0x07, 0x36, 0x0f, 0x7c, 0xf0, 0x60, 0x2c, 0x0c, 0xe6, 0x53, 0x41,
	0x49, 0x21, 0x51, 0x52, 0xd4, 0x21, 0xa5, 0xc3, 0x11, 0xd4, 0x43, 0xa9, 0x1f, 0xdc, 0xd6, 0x1d,
	0xe0, 0x03, 0xdf, 0x65, 0x82, 0xfa, 0x91, 0x5d, 0x29, 0xa7, 0x1d, 0xe0, 0x31, 0xf1, 0xf8, 0x2b,
	0x56, 0xd3, 0xa2, 0x70, 0x3d, 0xe0, 0xc2, 0xf6, 0x58, 0x64, 0xd0, 0xbe, 0x11, 0x2e, 0x9c, 0xc5,
	0xf3, 0xc8, 0x11, 0x96, 0x1c, 0xb8, 0x77, 0x07, 0xd0, 0x73, 0x1d, 0x19, 0xa9, 0x48, 0x97, 0x9a,
	0xea, 0xdb, 0xa7, 0xbc, 0x76, 0x73, 0x6d, 0xd7, 0x9e, 0xba, 0x93, 0xcf, 0x76, 0xed, 0x60, 0xd3,
	0xd8, 0x78, 0xed, 0xd5, 0xba, 0xcf, 0xe6, 0x96, 0xd9, 0xd8, 0x7b, 0x59, 0xb7, 0x96, 0xa2, 0xc8,
	0x89, 0x43, 0xf6, 0xb1, 0x34, 0x9b, 0x20, 0x67, 0x55, 0xa4, 0x17, 0x4c, 0xc5, 0x88, 0x18, 0x8c,
	0x29, 0x83, 0x71, 0x39, 0x75, 0x58, 0xb1, 0x99, 0x10, 0x9c, 0x17, 0xe0, 0x31, 0x39, 0xa7, 0x22,
	0x3d, 0x6b, 0x85, 0xff, 0xa4, 0x85, 0x4b, 0x01, 0x1b, 0x51, 0xdb, 0xe9, 0xc5, 0x4d, 0xf3, 0x7f,
	0x36, 0x2d, 0x46, 0x99, 0x59, 0x41, 0xdb, 0xc1, 0xa4, 0x03, 0xe2, 0x38, 0x64, 0xe4, 0x16, 0x70,
	0x46, 0xc7, 0x1c, 0x48, 0x79, 0x7e, 0xd3, 0x9c, 0x2e, 0xc5, 0x7b, 0x68, 0x75, 0x5c, 0xea, 0x80,
	0x38, 0xb5, 0x05, 0x70, 0x61, 0xc1, 0x5d, 0x00, 0x5c, 0xa4, 0x03, 0x28, 0x19, 0x30, 0x3f, 0x10,
	0x26, 0x89, 0x73, 0xbc, 0x00, 0x7f, 0x22, 0x90, 0x0e, 0xc6, 0xf1, 0x68, 0xb2, 0xba, 0x40, 0xdd,
	0x9a, 0xdc, 0x95, 0x52, 0x35, 0x92, 0xaf, 0x60, 0x91, 0x55, 0xcb, 0x90, 0x36, 0x96, 0x66, 0x40,
	0xa4, 0x92, 0xf6, 0xcf, 0x81, 0x2a, 0xf2, 0x9c, 0x9c, 0xa0, 0xd2, 0x32, 0x87, 0x0d, 0xfc, 0xcf,
	0x87, 0x21, 0x3c, 0x90, 0xca, 0x02, 0x4b, 0xdb, 0x85, 0x91, 0x73, 0xce, 0x84, 0x4b, 0xc7, 0x5c,
	0xfe, 0x7a, 0xcf, 0x85, 0x1b, 0x46, 0xee, 0x66, 0xf1, 0x6a, 0x39, 0xd1, 0x93, 0xf5, 0xfb, 0xff,
	0xc3, 0xd8, 0xee, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x87, 0x69, 0xc0, 0xc0, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MeasurementServiceClient is the client API for MeasurementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeasurementServiceClient interface {
	GetDevices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetDevicesResponse, error)
	GetLatest(ctx context.Context, in *GetLatestRequest, opts ...grpc.CallOption) (*Measurement, error)
}

type measurementServiceClient struct {
	cc *grpc.ClientConn
}

func NewMeasurementServiceClient(cc *grpc.ClientConn) MeasurementServiceClient {
	return &measurementServiceClient{cc}
}

func (c *measurementServiceClient) GetDevices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetDevicesResponse, error) {
	out := new(GetDevicesResponse)
	err := c.cc.Invoke(ctx, "/measurement.MeasurementService/GetDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *measurementServiceClient) GetLatest(ctx context.Context, in *GetLatestRequest, opts ...grpc.CallOption) (*Measurement, error) {
	out := new(Measurement)
	err := c.cc.Invoke(ctx, "/measurement.MeasurementService/GetLatest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeasurementServiceServer is the server API for MeasurementService service.
type MeasurementServiceServer interface {
	GetDevices(context.Context, *empty.Empty) (*GetDevicesResponse, error)
	GetLatest(context.Context, *GetLatestRequest) (*Measurement, error)
}

func RegisterMeasurementServiceServer(s *grpc.Server, srv MeasurementServiceServer) {
	s.RegisterService(&_MeasurementService_serviceDesc, srv)
}

func _MeasurementService_GetDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementServiceServer).GetDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/measurement.MeasurementService/GetDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementServiceServer).GetDevices(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeasurementService_GetLatest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeasurementServiceServer).GetLatest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/measurement.MeasurementService/GetLatest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeasurementServiceServer).GetLatest(ctx, req.(*GetLatestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeasurementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "measurement.MeasurementService",
	HandlerType: (*MeasurementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDevices",
			Handler:    _MeasurementService_GetDevices_Handler,
		},
		{
			MethodName: "GetLatest",
			Handler:    _MeasurementService_GetLatest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "measurement.proto",
}
